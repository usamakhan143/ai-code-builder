import JSZip from 'jszip';

export const downloadProjectAsZip = async (projectData, projectName = 'ai-generated-website') => {
  try {
    const zip = new JSZip();

    console.log('Creating ZIP for project:', projectName, projectData);

    if (projectData.projectStructure) {
      // React/Framework project - create proper file structure
      console.log('Processing React project structure...');

      Object.entries(projectData.projectStructure).forEach(([filePath, content]) => {
        console.log(`Adding file: ${filePath}`);

        // Split the path to handle nested directories
        const pathParts = filePath.split('/');
        const fileName = pathParts[pathParts.length - 1];
        const directories = pathParts.slice(0, -1);

        // Create the nested folder structure
        let currentZip = zip;
        directories.forEach(dir => {
          if (dir) { // Skip empty strings
            currentZip = currentZip.folder(dir);
          }
        });

        // Add the file with content
        const fileContent = content || `// ${fileName}\n// This file was generated by AI\n\nexport default function ${fileName.replace(/\.[^/.]+$/, "")} () {\n  return (\n    <div>\n      <h1>${fileName}</h1>\n      <p>Component content goes here</p>\n    </div>\n  );\n}`;

        currentZip.file(fileName, fileContent);
      });

      // Add enhanced README for React projects
      const readme = createReactReadme(projectName, projectData);
      zip.file('README.md', readme);

    } else if (projectData.html) {
      // HTML project
      console.log('Processing HTML project...');

      zip.file('index.html', projectData.html);

      if (projectData.css) {
        zip.file('styles.css', projectData.css);
      }

      if (projectData.js) {
        zip.file('script.js', projectData.js);
      }

      // Add README for HTML projects
      const readme = createHtmlReadme(projectName, projectData);
      zip.file('README.md', readme);

    } else {
      throw new Error('No valid project data found');
    }

    console.log('Generating ZIP file...');

    // Generate and download the ZIP file
    const content = await zip.generateAsync({
      type: 'blob',
      compression: 'DEFLATE',
      compressionOptions: { level: 6 }
    });

    console.log('ZIP generated, starting download...');

    // Create download link
    const url = window.URL.createObjectURL(content);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${projectName.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.zip`;

    // Trigger download
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    // Clean up
    window.URL.revokeObjectURL(url);

    console.log('Download completed successfully');
    return {
      success: true,
      fileCount: projectData.projectStructure ? Object.keys(projectData.projectStructure).length : 1
    };

  } catch (error) {
    console.error('Error creating ZIP file:', error);
    return {
      success: false,
      error: `Failed to create ZIP file: ${error.message}`
    };
  }
};

const createReactReadme = (projectName, projectData) => {
  return `# ${projectName}

AI-Generated React Application

## Description
${projectData.description || 'A modern React application generated by AI'}

## Project Structure
This is a complete React application with the following structure:

\`\`\`
${Object.keys(projectData.projectStructure || {}).map(file => file).join('\n')}
\`\`\`

## Pages Included
${projectData.pages ? projectData.pages.map(page => `- ${page} Page`).join('\n') : '- Multiple pages with navigation'}

## Features
${projectData.features ? projectData.features.map(feature => `- ${feature}`).join('\n') : '- Responsive Design\n- Modern React Components\n- React Router Navigation'}

## Getting Started

1. Install dependencies:
   \`\`\`bash
   npm install
   \`\`\`

2. Start the development server:
   \`\`\`bash
   npm start
   \`\`\`

3. Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

## Dependencies Required
Add these to your package.json:
\`\`\`json
{
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.8.0",
    "react-scripts": "5.0.1"
  }
}
\`\`\`

## Available Scripts
- \`npm start\` - Runs the app in development mode
- \`npm run build\` - Builds the app for production
- \`npm test\` - Launches the test runner

## Generated on
${new Date().toLocaleDateString()} by AI UI Builder

## Support
This project uses modern React patterns including:
- Functional Components
- React Hooks
- React Router v6
- Responsive Design with CSS

Customize the components as needed for your specific requirements.
`;
};

const createHtmlReadme = (projectName, projectData) => {
  return `# ${projectName}

AI-Generated HTML Website

## Description
${projectData.description || 'A modern website generated by AI'}

## Files Included
- \`index.html\` - Main HTML file with embedded styles and scripts
${projectData.css ? '- `styles.css` - Additional CSS stylesheet' : ''}
${projectData.js ? '- `script.js` - JavaScript functionality' : ''}

## Features
- Responsive Design
- Modern Styling
- Interactive Elements
- Cross-browser Compatible

## Getting Started

### Local Development
1. Extract the ZIP file
2. Open \`index.html\` in your web browser
3. That's it! No server required.

### Web Hosting
Upload all files to your web hosting provider:
- Upload to public_html or www folder
- Ensure index.html is in the root directory
- Access via your domain name

## Deployment Options

### Free Hosting Services
- **Netlify**: Drag and drop the files
- **Vercel**: Connect to Git repository
- **GitHub Pages**: Push to GitHub and enable Pages
- **Firebase Hosting**: Use Firebase CLI

### Traditional Hosting
- Upload via FTP/SFTP
- Use cPanel file manager
- Deploy through hosting control panel

## Customization
- Edit HTML content in \`index.html\`
- Modify styles in the \`<style>\` section or external CSS
- Add functionality in the \`<script>\` section or external JS

## Generated on
${new Date().toLocaleDateString()} by AI UI Builder

## Browser Support
- Chrome (latest)
- Firefox (latest)
- Safari (latest)
- Edge (latest)
`;
};
